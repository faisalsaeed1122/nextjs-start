@mixin transition($what: all, $time: 0.6s, $how: ease) {
  -webkit-transition: $what $time $how;
  -moz-transition: $what $time $how;
  -ms-transition: $what $time $how;
  -o-transition: $what $time $how;
  transition: $what $time $how;
}
@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
}
@mixin box-shadow($left, $top, $radius, $color) {
  box-shadow: $left $top $radius $color;
  -webkit-box-shadow: $left $top $radius $color;
  -moz-box-shadow: $left $top $radius $color;
}

/* clearfix */
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
/* center block */
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/* center vertically */
@mixin center-vertically {
  position: absolute;
  top: 50%;
  left: 50%;
  @include prefix(transform, translate(-50%, -50%), "webkit" "ms");
}

//Padding mixin
@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}
//Margin mixin
@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

//placeholder mixin
@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

//positioning elements mixin
@mixin center($position) {
  position: absolute;

  @if $position == "vertical" {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == "horizontal" {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == "both" {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

//shapes mixin
@mixin shape($shape, $size, $color) {
  @if $shape == square {
    width: $size;
    height: $size;
    background-color: $color;
  }
  @if $shape == circle {
    width: $size;
    height: $size;
    background-color: $color;
    border-radius: 50%;
  }
  @if $shape == triangle {
    width: 0;
    height: 0;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size * 1.5 solid $color;
  }
}

//text shorten mixin
@mixin text-shorten {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//agradient mixin
@mixin gradient($start-color, $end-color, $orientation) {
  background: $start-color;
  @if $orientation == "vertical" {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == "horizontal" {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(
      center,
      ellipse cover,
      $start-color,
      $end-color
    );
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

//flex mixin
@mixin flex-column {
  display: flex;
  flex-direction: column;
}
@mixin flex-row {
  display: flex;
  flex-direction: row;
}
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-vert {
  display: flex;
  align-items: center;
}

@mixin flex-center-vert-column {
  display: flex;
  justify-content: center;
  flex-direction: column;
}

@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}

@mixin object-fit-cover {
  object-fit: cover;
  width: 100%;
  height: 100%;
}
@mixin object-fit-contain {
  object-fit: contain;
  width: 100%;
  height: 100%;
}

//show hide item mixin
@mixin fade($type) {
  @if $type== "hide" {
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s, opacity 1s;
  } @else if $type== "show" {
    visibility: visible;
    opacity: 1;
    transition: visibility 1s, opacity 1s;
  }
}

//opacity mixin
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity = $opacity-ie); //IE8
}

//z-index mixin
@function z($name) {
  @if index($z-indexes, $name) {
    @return (length($z-indexes) - index($z-indexes, $name)) + 1;
  } @else {
    @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
    @return null;
  }
}
$z-indexes: (
  "outdated-browser",
  "modal",
  "site-header",
  "page-wrapper",
  "site-footer"
);

//pseudo elements mixin
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

//ratina images mixin
@mixin retina($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
    /* Serving 2x image on Retina display */
    background-image: url($image);
    background-size: $width $height;
  }
}

//box shadow mixin
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

//card shadow and hover mixin
@mixin card-shadow() {
  @include box-shadow(0, 34px, 44px, -20px rgba(185, 206, 234, 0.25));
}

@mixin card-hover() {
  @include box-shadow(0, 10px, 40px, black(0.1));
  @include transform(translateY(-1px));
}

//buttons shadow and hover mixin
@mixin button-shadow() {
  @include box-shadow(0, 12px, 26px, #00000039);
}
@mixin button-hover() {
  @include box-shadow(0, 2px, 10px, black(0.1));
  @include transform(translateY(-1px));
}

@mixin input-shadow() {
  @include box-shadow(0, 1px, 2px, black(0.2));
}
@mixin input-hover() {
  @include box-shadow(0, 4px, 10px, black(0.1));
  @include transform(translateY(-1px));
}

//white and black opacity mixin
@function black($opacity) {
  @return rgba(0, 0, 0, $opacity);
}
@function white($opacity) {
  @return rgba(255, 255, 255, $opacity);
}

//absilute position mixin
@mixin absolute-position(
  $position: absolute,
  $top: null,
  $right: null,
  $bottom: null,
  $left: null
) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

//transform mixin
@mixin transform($transforms) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  -ms-transform: $transforms;
  transform: $transforms;
}
// Rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// Translate
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

//aspect ratio mixin
@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + "%");
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}

//button left to right and right to left animation mixin
@mixin background-transition($initial, $hover, $inversed: false) {
  background: linear-gradient(
    90deg,
    $hover 0%,
    $hover 50%,
    $initial 50%,
    $initial 100%
  );
  background-repeat: no-repeat;
  background-size: 200% 100%;
  background-position: right bottom;
  @if $inversed {
    background-position: left bottom;
  }
  &:hover {
    background-position: left bottom;
    @if $inversed {
      background-position: right bottom;
    }
  }
}

@mixin scrollbars($size, $front-color, $back-color) {
  // For Google Chrome
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-thumb {
    background: $front-color;
    @include border-radius(30px);
  }

  &::-webkit-scrollbar-track {
    background: $back-color;
    @include border-radius(30px);
  }
}

// Font size mixin
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

$gradient-yellow: 50% 50% at 50% 50%, #ffdf7c 0%, rgba(246, 251, 248, 0) 100%;
@mixin radial-gradient($gradient-yellow) {
  background: -webkit-radial-gradient($gradient-yellow);
  background: -moz-radial-gradient($gradient-yellow);
  background: -o-radial-gradient($gradient-yellow);
  background: radial-gradient($gradient-yellow);
}

$gradient-pink: 50% 50% at 50% 50%, #e49192 0%, rgba(246, 251, 248, 0) 100%;
@mixin radial-gradient($gradient-pink) {
  background: -webkit-radial-gradient($gradient-pink);
  background: -moz-radial-gradient($gradient-pink);
  background: -o-radial-gradient($gradient-pink);
  background: radial-gradient($gradient-pink);
}
$gradient-blue: 50% 50% at 50% 50%, #b9ceea 0%, rgba(246, 251, 248, 0) 100%;
@mixin radial-gradient($gradient-blue) {
  background: -webkit-radial-gradient($gradient-blue);
  background: -moz-radial-gradient($gradient-blue);
  background: -o-radial-gradient($gradient-blue);
  background: radial-gradient($gradient-blue);
}

@mixin image-border {
  position: relative;
  &:before {
    position: absolute;
    content: "";
    border: 1px solid #e4eaec;
    height: 100%;
    right: -15px;
    top: 15px;
    width: 100%;
    z-index: -1;
    @include transition;
    @include border-radius(10px);
  }
}
